---
export type Props = {
  src: string
  alt?: string
  style?: string
  caption?: string
}
const { src, alt, style, caption } = Astro.props as Props

/**
 * This component adds the classNames required by the scripts/click-to-zoom.ts script.
 */
---

<div class="click-to-zoom-container">
  <img src={src} alt={alt} style={style} class="click-to-zoom" data-caption={caption} />
  {caption && <p class="click-to-zoom-caption">{caption}</p>}
</div>

<style>
  .click-to-zoom-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 2rem;
  }
  .click-to-zoom {
    margin-top: 1em;
    max-height: 50vh;
    cursor: zoom-in;
    display: block;
    margin-left: auto;
    margin-right: auto;
  }
  .click-to-zoom-caption {
    font-size: 0.8rem;
    text-align: center;
    margin-top: 0.5rem;
    color: var(--color-text-secondary);
  }
</style>
<style is:global>
  #expanded-image-preview {
    max-height: 90vh;
    max-width: 95vw;
  }
  #expanded-image-wrapper {
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    z-index: 100;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    align-items: center;
    margin: 0;
    cursor: zoom-out;
    display: none;
  }
  @media (min-width: 50em) {
    #expanded-image-wrapper {
      display: flex;
    }
  }

  .expanded-image-caption {
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 8px 15px;
    border-radius: 5px;
    font-size: 0.9rem;
    text-align: center;
    max-width: 80%;
    z-index: 101;
    margin-top: 1rem;
  }
</style>
