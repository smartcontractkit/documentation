---
import alertIcon from "./Alert/Assets/alert-icon.svg"
import infoIcon from "./Alert/Assets/info-icon.svg"
import dangerIcon from "./Alert/Assets/danger-icon.svg"
export type Props = {
  type?: "note" | "tip" | "caution" | "danger"
  title?: string
}

const { type = "note", title = type } = Astro.props as Props

// SVG icon paths based on GitHub Octicons
const icons = {
  note: infoIcon,
  tip: infoIcon,
  caution: alertIcon,
  danger: dangerIcon,
}
---

<aside class={type} aria-label={title}>
  <div class="icon">
    <img src={icons[type].src} style="width: 1.5em;height: 1.5em;" alt={type} />
  </div>
  <div class="asideContent">
    <p class="title heading-100" aria-hidden="true">
      {title}
    </p>
    <slot />
  </div>
</aside>

<style>
  aside {
    --aside-bg: var(--color-background-info);

    padding: var(--space-4x);
    gap: var(--space-4x);
    background-color: var(--aside-bg);
    border: 1px solid #eee;
    border-radius: var(--border-radius-10);
    color: var(--color-text-info);

    /* Indicates the aside boundaries for forced colors users, transparent is changed to a solid color */
    outline: 1px solid transparent;

    display: flex;
  }

  .asideContent .title {
    font-weight: bold;
    text-transform: uppercase;
    color: var(--theme-text);
  }

  .icon {
    flex-shrink: 0;
    width: 1.5em;
  }

  .icon svg {
    vertical-align: middle;
    fill: currentcolor;
  }

  .caution {
    --aside-bg: var(--color-background-warning);
  }

  .danger {
    --aside-bg: var(--color-background-error);
  }
</style>

<style is:inline>
  .asideContent a,
  .asideContent a > code:not([class*="language"]) {
    color: var(--color-text-link);
    text-decoration: underline;
  }

  .theme-dark .asideContent code:not([class*="language"]) {
    color: var(--theme-code-text);
  }

  .asideContent p,
  .asideContent li {
    color: var(--theme-text-light);
    line-height: 1.5;
    font-size: 14px;
  }

  .asideContent p {
    margin-bottom: 0;
  }

  .asideContent p + p {
    margin-top: var(--space-2x);
  }

  .asideContent p + :is(ul, ol) {
    margin-top: var(--space-1x);
  }

  .asideContent li {
    margin-top: var(--space-1x);
  }

  .asideContent pre {
    margin-left: 0;
    margin-right: 0;
  }
</style>
