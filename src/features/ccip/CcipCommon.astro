---
const extraArgsCallout = await Astro.glob("./ExtraArgsCallout.mdx")
const ExtraArgsCalloutComponent = extraArgsCallout[0].Content
const thirdPartyApps = await Astro.glob("./third-party-apps.mdx")
const ThirdPartyAppsComponent = thirdPartyApps[0].Content
const SupportedNetworksConcepts = await Astro.glob("./Supported-networks-concepts.mdx")
const SupportedNetworksConceptsComponent = SupportedNetworksConcepts[0].Content
const ImportCCIPPackage = await Astro.glob("./ImportCCIPPackage.mdx")
const ImportCCIPPackageComponent = ImportCCIPPackage[0].Content
const TalkToExpert = await Astro.glob("./Talk-Expert.mdx")
const TalkToExpertComponent = TalkToExpert[0].Content
const UseSimulator = await Astro.glob("./Use-Simulator.mdx")
const UseSimulatorComponent = UseSimulator[0].Content
export type Props = {
  callout?:
    | "extraArgsCallout"
    | "thirdPartyApps"
    | "supportedNetworksConcepts"
    | "importCCIPPackage"
    | "talkToExpert"
    | "useSimulator"
}
const { callout } = Astro.props as Props
---

{callout === "extraArgsCallout" && <ExtraArgsCalloutComponent />}
{callout === "thirdPartyApps" && <ThirdPartyAppsComponent />}
{callout === "supportedNetworksConcepts" && <SupportedNetworksConceptsComponent />}
{callout === "importCCIPPackage" && <ImportCCIPPackageComponent />}
{callout === "talkToExpert" && <TalkToExpertComponent />}
{callout === "useSimulator" && <UseSimulatorComponent />}
