---
const senderContractCallout = await Astro.glob("./SenderContractCallout.mdx")
const SenderContractCalloutComponent = senderContractCallout[0].Content
const thirdPartyApps = await Astro.glob("./third-party-apps.mdx")
const ThirdPartyAppsComponent = thirdPartyApps[0].Content
const SupportedNetworksConcepts = await Astro.glob("./Supported-networks-concepts.mdx")
const SupportedNetworksConceptsComponent = SupportedNetworksConcepts[0].Content
const ImportCCIPPackage = await Astro.glob("./ImportCCIPPackage.mdx")
const ImportCCIPPackageComponent = ImportCCIPPackage[0].Content
const TalkToExpert = await Astro.glob("./Talk-Expert.mdx")
const TalkToExpertComponent = TalkToExpert[0].Content
const UseSimulator = await Astro.glob("./Use-Simulator.mdx")
const UseSimulatorComponent = UseSimulator[0].Content
const RMNCaution = await Astro.glob("./RMNCaution.mdx")
const RMNCautionComponent = RMNCaution[0].Content
const GasSpike = await Astro.glob("./GasSpike.mdx")
const GasSpikeComponent = GasSpike[0].Content

const SelfServeCallout = await Astro.glob("./SelfServeCallout.mdx")
const SelfServeCalloutComponent = SelfServeCallout[0].Content
const RegisterFromEOAIntro = await Astro.glob("./RegisterFromEOAIntro.mdx")
const RegisterFromEOAIntroComponent = RegisterFromEOAIntro[0].Content
const RegisterLockMintFromEOAIntro = await Astro.glob("./RegisterLockMintFromEOAIntro.mdx")
const RegisterLockMintFromEOAIntroComponent = RegisterLockMintFromEOAIntro[0].Content
const GasLimitPool = await Astro.glob("./GasLimitPool.mdx")
const GasLimitPoolComponent = GasLimitPool[0].Content
const TokenPoolOwnership = await Astro.glob("./TokenPoolOwnership.mdx")
const TokenPoolOwnershipComponent = TokenPoolOwnership[0].Content
export type Props = {
  callout?:
    | "senderContractCallout"
    | "thirdPartyApps"
    | "supportedNetworksConcepts"
    | "importCCIPPackage"
    | "talkToExpert"
    | "useSimulator"
    | "rmnCaution"
    | "gasSpike"
    | "selfServeCallout"
    | "registerFromEOAIntro"
    | "registerLockMintFromEOAIntro"
    | "gasLimitPool"
    | "tokenPoolOwnership"
}
const { callout } = Astro.props as Props
---

{callout === "senderContractCallout" && <SenderContractCalloutComponent />}
{callout === "thirdPartyApps" && <ThirdPartyAppsComponent />}
{callout === "supportedNetworksConcepts" && <SupportedNetworksConceptsComponent />}
{callout === "importCCIPPackage" && <ImportCCIPPackageComponent />}
{callout === "talkToExpert" && <TalkToExpertComponent />}
{callout === "useSimulator" && <UseSimulatorComponent />}
{callout === "rmnCaution" && <RMNCautionComponent />}
{callout === "gasSpike" && <GasSpikeComponent />}
{callout === "selfServeCallout" && <SelfServeCalloutComponent />}
{callout === "registerFromEOAIntro" && <RegisterFromEOAIntroComponent />}
{callout === "registerLockMintFromEOAIntro" && <RegisterLockMintFromEOAIntroComponent />}
{callout === "gasLimitPool" && <GasLimitPoolComponent />}
{callout === "tokenPoolOwnership" && <TokenPoolOwnershipComponent />}
