---
import { CollectionEntry, getCollection } from "astro:content"
import DocsLayout from "~/layouts/DocsLayout.astro"
import { CCIP_VERSIONS } from "@config/versions/ccip"

type Props = {
  entry: CollectionEntry<"ccip">
}

// Generate paths for all versions and their docs
export async function getStaticPaths() {
  // Helper to convert version to filesystem slug
  const versionToSlug = (version: string) => version.replace(/\./g, "")

  // Get all API reference docs
  const entries = await getCollection("ccip", (entry) => {
    return entry.slug.startsWith("api-reference/")
  })

  const paths: { params: { slug: string }; props: Props }[] = []

  // Add version index pages (e.g., /v1.5.1)
  CCIP_VERSIONS.ALL.forEach((version) => {
    // Find the version's index page using the filesystem-safe version
    const versionEntry = entries.find((entry) => entry.slug === `api-reference/${versionToSlug(version)}`)

    if (versionEntry) {
      paths.push({
        params: { slug: version },
        props: { entry: versionEntry },
      })

      // Add all API doc pages for this version
      entries.forEach((entry) => {
        if (
          entry.slug.startsWith(`api-reference/${versionToSlug(version)}/`) &&
          entry.slug !== `api-reference/${versionToSlug(version)}`
        ) {
          const docSlug = entry.slug.replace("api-reference/", "").replace(versionToSlug(version), version)

          paths.push({
            params: { slug: docSlug },
            props: { entry },
          })
        }
      })
    }
  })

  return paths
}

const { entry } = Astro.props
const { Content, headings } = await entry.render()
---

<DocsLayout frontmatter={entry.data} {headings}>
  <Content />
</DocsLayout>
